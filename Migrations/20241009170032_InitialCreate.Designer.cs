// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherNewsAPI.Data;

#nullable disable

namespace WeatherNewsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241009170032_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WeatherNewsAPI.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("WeatherNewsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeatherNewsId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("WeatherNewsAPI.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("double");

                    b.Property<int?>("WeatherNewsId")
                        .HasColumnType("int");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("WeatherNewsId")
                        .IsUnique();

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("WeatherNewsAPI.Models.WeatherNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("QueryDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("WeatherNews");
                });

            modelBuilder.Entity("WeatherNewsAPI.Models.News", b =>
                {
                    b.HasOne("WeatherNewsAPI.Models.WeatherNews", null)
                        .WithMany("News")
                        .HasForeignKey("WeatherNewsId");
                });

            modelBuilder.Entity("WeatherNewsAPI.Models.Weather", b =>
                {
                    b.HasOne("WeatherNewsAPI.Models.WeatherNews", null)
                        .WithOne("Weather")
                        .HasForeignKey("WeatherNewsAPI.Models.Weather", "WeatherNewsId");
                });

            modelBuilder.Entity("WeatherNewsAPI.Models.WeatherNews", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Weather")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
